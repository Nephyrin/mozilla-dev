/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "domstubs.idl"

interface nsIAlternateSourceChannel;
interface nsIDocument;
interface nsIURI;

[uuid(9d3d11c8-0c0b-4c55-90b7-8e727ba33f9f)]
interface nsIServiceWorkerManager : nsISupports
{
  // Returns a Promise
  nsISupports register(in nsIDOMWindow aWindow, in DOMString aScope, in DOMString aScriptURI);

  // Returns a Promise
  nsISupports unregister(in nsIDOMWindow aWindow, in DOMString aScope);

  // aTarget MUST be a ServiceWorkerContainer.
  [noscript] void AddContainerEventListener(in nsIURI aPageURI, in nsIDOMEventTarget aTarget);
  [noscript] void RemoveContainerEventListener(in nsIURI aPageURI, in nsIDOMEventTarget aTarget);

  /**
   * Call this to request that document `aDoc` be controlled by a ServiceWorker
   * if a registration exists for it's scope.
   *
   * This MUST only be called once per document!
   */
  [notxpcom,nostdcall] void MaybeStartControlling(in nsIDocument aDoc);

  /**
   * Documents that have called MaybeStartControlling() should call this when
   * they are destroyed. This function may be called multiple times, and is
   * idempotent.
   */
  [notxpcom,nostdcall] void MaybeStopControlling(in nsIDocument aDoc);

  // Returns a ServiceWorker
  [noscript] nsISupports GetInstalling(in nsIDOMWindow aWindow);
  [noscript] nsISupports GetWaiting(in nsIDOMWindow aWindow);
  [noscript] nsISupports GetActive(in nsIDOMWindow aWindow);
  [noscript] nsISupports GetDocumentController(in nsIDOMWindow aWindow);

  void SendNavigationEvent(in nsIAlternateSourceChannel aChannel);

  // Testing
  DOMString getScopeForUrl(in DOMString path);
};

%{ C++
#define SERVICEWORKERMANAGER_CONTRACTID "@mozilla.org/serviceworkers/manager;1"
%}
